"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/services/api.ts":
/*!*****************************!*\
  !*** ./src/services/api.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connectToWebSocket: function() { return /* binding */ connectToWebSocket; },\n/* harmony export */   fetchInitialData: function() { return /* binding */ fetchInitialData; }\n/* harmony export */ });\nconst COIN_LIST = [\n    \"ethereum\",\n    \"usdt\",\n    \"avalanche\",\n    \"bitcoin\",\n    \"tron\",\n    \"chainlink\",\n    \"shib\",\n    \"solana\",\n    \"decentraland\",\n    \"sand\"\n];\nasync function fetchInitialData() {\n    const initialData = {};\n    for (const coin of COIN_LIST){\n        try {\n            const response = await fetch(\"https://api.coincap.io/v2/assets/\".concat(coin, \"/history?interval=h1\"));\n            const data = await response.json();\n            if (data.data) {\n                const historyPrices = data.data.map((entry)=>parseFloat(entry.priceUsd));\n                const latestPrice = historyPrices[historyPrices.length - 1];\n                initialData[coin.toLowerCase()] = {\n                    price: latestPrice.toFixed(9),\n                    symbol: coin.toUpperCase(),\n                    marketValue: (Number(data.data[data.data.length - 1].marketCapUsd) / 1e9).toFixed(2),\n                    change24h: (historyPrices[historyPrices.length - 1] - historyPrices[historyPrices.length - 24]).toFixed(2),\n                    priceHistory: historyPrices.slice(-10)\n                };\n            }\n        } catch (error) {\n            console.error(\"Failed to fetch data for \".concat(coin, \":\"), error);\n        }\n    }\n    return initialData;\n}\nconst connectToWebSocket = (onMessage)=>{\n    const pricesWs = new WebSocket(\"wss://ws.coincap.io/prices?assets=\".concat(COIN_LIST.join(\",\")));\n    pricesWs.onmessage = function(msg) {\n        const data = JSON.parse(msg.data);\n        const updatedData = {};\n        Object.keys(data).forEach((key)=>{\n            var _data_key_priceHistory, _data_key;\n            const newPrice = Number(data[key]).toFixed(9);\n            updatedData[key] = {\n                ...data[key],\n                price: newPrice,\n                priceHistory: [\n                    ...((_data_key = data[key]) === null || _data_key === void 0 ? void 0 : (_data_key_priceHistory = _data_key.priceHistory) === null || _data_key_priceHistory === void 0 ? void 0 : _data_key_priceHistory.slice(-9)) || [],\n                    newPrice\n                ]\n            };\n        });\n        onMessage(updatedData);\n    };\n    pricesWs.onclose = function() {\n        console.log(\"WebSocket connection closed\");\n    };\n    return ()=>{\n        pricesWs.close();\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9zZXJ2aWNlcy9hcGkudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFFQSxNQUFNQSxZQUFZO0lBQ2hCO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0NBQ0Q7QUFFTSxlQUFlQztJQUNwQixNQUFNQyxjQUF3QyxDQUFDO0lBRS9DLEtBQUssTUFBTUMsUUFBUUgsVUFBVztRQUM1QixJQUFJO1lBQ0YsTUFBTUksV0FBVyxNQUFNQyxNQUNyQixvQ0FBeUMsT0FBTEYsTUFBSztZQUUzQyxNQUFNRyxPQUFPLE1BQU1GLFNBQVNHLElBQUk7WUFFaEMsSUFBSUQsS0FBS0EsSUFBSSxFQUFFO2dCQUNiLE1BQU1FLGdCQUFnQkYsS0FBS0EsSUFBSSxDQUFDRyxHQUFHLENBQUMsQ0FBQ0MsUUFDbkNDLFdBQVdELE1BQU1FLFFBQVE7Z0JBRTNCLE1BQU1DLGNBQWNMLGFBQWEsQ0FBQ0EsY0FBY00sTUFBTSxHQUFHLEVBQUU7Z0JBRTNEWixXQUFXLENBQUNDLEtBQUtZLFdBQVcsR0FBRyxHQUFHO29CQUNoQ0MsT0FBT0gsWUFBWUksT0FBTyxDQUFDO29CQUMzQkMsUUFBUWYsS0FBS2dCLFdBQVc7b0JBQ3hCQyxhQUFhLENBQ1hDLE9BQU9mLEtBQUtBLElBQUksQ0FBQ0EsS0FBS0EsSUFBSSxDQUFDUSxNQUFNLEdBQUcsRUFBRSxDQUFDUSxZQUFZLElBQUksR0FBRSxFQUN6REwsT0FBTyxDQUFDO29CQUNWTSxXQUFXLENBQ1RmLGFBQWEsQ0FBQ0EsY0FBY00sTUFBTSxHQUFHLEVBQUUsR0FDdkNOLGFBQWEsQ0FBQ0EsY0FBY00sTUFBTSxHQUFHLEdBQUcsRUFDeENHLE9BQU8sQ0FBQztvQkFDVk8sY0FBY2hCLGNBQWNpQixLQUFLLENBQUMsQ0FBQztnQkFDckM7WUFDRjtRQUNGLEVBQUUsT0FBT0MsT0FBTztZQUNkQyxRQUFRRCxLQUFLLENBQUMsNEJBQWlDLE9BQUx2QixNQUFLLE1BQUl1QjtRQUNyRDtJQUNGO0lBRUEsT0FBT3hCO0FBQ1Q7QUFFTyxNQUFNMEIscUJBQXFCLENBQ2hDQztJQUVBLE1BQU1DLFdBQVcsSUFBSUMsVUFDbkIscUNBQXlELE9BQXBCL0IsVUFBVWdDLElBQUksQ0FBQztJQUd0REYsU0FBU0csU0FBUyxHQUFHLFNBQVVDLEdBQUc7UUFDaEMsTUFBTTVCLE9BQU82QixLQUFLQyxLQUFLLENBQUNGLElBQUk1QixJQUFJO1FBQ2hDLE1BQU0rQixjQUF3QyxDQUFDO1FBRS9DQyxPQUFPQyxJQUFJLENBQUNqQyxNQUFNa0MsT0FBTyxDQUFDLENBQUNDO2dCQU1KbkMsd0JBQUFBO1lBTHJCLE1BQU1vQyxXQUFXckIsT0FBT2YsSUFBSSxDQUFDbUMsSUFBSSxFQUFFeEIsT0FBTyxDQUFDO1lBRTNDb0IsV0FBVyxDQUFDSSxJQUFJLEdBQUc7Z0JBQ2pCLEdBQUduQyxJQUFJLENBQUNtQyxJQUFJO2dCQUNaekIsT0FBTzBCO2dCQUNQbEIsY0FBYzt1QkFBS2xCLEVBQUFBLFlBQUFBLElBQUksQ0FBQ21DLElBQUksY0FBVG5DLGlDQUFBQSx5QkFBQUEsVUFBV2tCLFlBQVksY0FBdkJsQiw2Q0FBQUEsdUJBQXlCbUIsS0FBSyxDQUFDLENBQUMsT0FBTSxFQUFFO29CQUFHaUI7aUJBQVM7WUFDekU7UUFDRjtRQUVBYixVQUFVUTtJQUNaO0lBRUFQLFNBQVNhLE9BQU8sR0FBRztRQUNqQmhCLFFBQVFpQixHQUFHLENBQUM7SUFDZDtJQUVBLE9BQU87UUFDTGQsU0FBU2UsS0FBSztJQUNoQjtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3NlcnZpY2VzL2FwaS50cz85NTZlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvaW5EYXRhIH0gZnJvbSBcIi4uXCI7XG5cbmNvbnN0IENPSU5fTElTVCA9IFtcbiAgXCJldGhlcmV1bVwiLFxuICBcInVzZHRcIixcbiAgXCJhdmFsYW5jaGVcIixcbiAgXCJiaXRjb2luXCIsXG4gIFwidHJvblwiLFxuICBcImNoYWlubGlua1wiLFxuICBcInNoaWJcIixcbiAgXCJzb2xhbmFcIixcbiAgXCJkZWNlbnRyYWxhbmRcIixcbiAgXCJzYW5kXCIsXG5dO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZmV0Y2hJbml0aWFsRGF0YSgpOiBQcm9taXNlPFJlY29yZDxzdHJpbmcsIENvaW5EYXRhPj4ge1xuICBjb25zdCBpbml0aWFsRGF0YTogUmVjb3JkPHN0cmluZywgQ29pbkRhdGE+ID0ge307XG5cbiAgZm9yIChjb25zdCBjb2luIG9mIENPSU5fTElTVCkge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKFxuICAgICAgICBgaHR0cHM6Ly9hcGkuY29pbmNhcC5pby92Mi9hc3NldHMvJHtjb2lufS9oaXN0b3J5P2ludGVydmFsPWgxYFxuICAgICAgKTtcbiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG5cbiAgICAgIGlmIChkYXRhLmRhdGEpIHtcbiAgICAgICAgY29uc3QgaGlzdG9yeVByaWNlcyA9IGRhdGEuZGF0YS5tYXAoKGVudHJ5OiBhbnkpID0+XG4gICAgICAgICAgcGFyc2VGbG9hdChlbnRyeS5wcmljZVVzZClcbiAgICAgICAgKTtcbiAgICAgICAgY29uc3QgbGF0ZXN0UHJpY2UgPSBoaXN0b3J5UHJpY2VzW2hpc3RvcnlQcmljZXMubGVuZ3RoIC0gMV07XG5cbiAgICAgICAgaW5pdGlhbERhdGFbY29pbi50b0xvd2VyQ2FzZSgpXSA9IHtcbiAgICAgICAgICBwcmljZTogbGF0ZXN0UHJpY2UudG9GaXhlZCg5KSxcbiAgICAgICAgICBzeW1ib2w6IGNvaW4udG9VcHBlckNhc2UoKSxcbiAgICAgICAgICBtYXJrZXRWYWx1ZTogKFxuICAgICAgICAgICAgTnVtYmVyKGRhdGEuZGF0YVtkYXRhLmRhdGEubGVuZ3RoIC0gMV0ubWFya2V0Q2FwVXNkKSAvIDFlOVxuICAgICAgICAgICkudG9GaXhlZCgyKSxcbiAgICAgICAgICBjaGFuZ2UyNGg6IChcbiAgICAgICAgICAgIGhpc3RvcnlQcmljZXNbaGlzdG9yeVByaWNlcy5sZW5ndGggLSAxXSAtXG4gICAgICAgICAgICBoaXN0b3J5UHJpY2VzW2hpc3RvcnlQcmljZXMubGVuZ3RoIC0gMjRdXG4gICAgICAgICAgKS50b0ZpeGVkKDIpLFxuICAgICAgICAgIHByaWNlSGlzdG9yeTogaGlzdG9yeVByaWNlcy5zbGljZSgtMTApLFxuICAgICAgICB9O1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKGBGYWlsZWQgdG8gZmV0Y2ggZGF0YSBmb3IgJHtjb2lufTpgLCBlcnJvcik7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGluaXRpYWxEYXRhO1xufVxuXG5leHBvcnQgY29uc3QgY29ubmVjdFRvV2ViU29ja2V0ID0gKFxuICBvbk1lc3NhZ2U6IChkYXRhOiBSZWNvcmQ8c3RyaW5nLCBDb2luRGF0YT4pID0+IHZvaWRcbikgPT4ge1xuICBjb25zdCBwcmljZXNXcyA9IG5ldyBXZWJTb2NrZXQoXG4gICAgYHdzczovL3dzLmNvaW5jYXAuaW8vcHJpY2VzP2Fzc2V0cz0ke0NPSU5fTElTVC5qb2luKFwiLFwiKX1gXG4gICk7XG5cbiAgcHJpY2VzV3Mub25tZXNzYWdlID0gZnVuY3Rpb24gKG1zZykge1xuICAgIGNvbnN0IGRhdGEgPSBKU09OLnBhcnNlKG1zZy5kYXRhKTtcbiAgICBjb25zdCB1cGRhdGVkRGF0YTogUmVjb3JkPHN0cmluZywgQ29pbkRhdGE+ID0ge307XG5cbiAgICBPYmplY3Qua2V5cyhkYXRhKS5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgIGNvbnN0IG5ld1ByaWNlID0gTnVtYmVyKGRhdGFba2V5XSkudG9GaXhlZCg5KTtcblxuICAgICAgdXBkYXRlZERhdGFba2V5XSA9IHtcbiAgICAgICAgLi4uZGF0YVtrZXldLFxuICAgICAgICBwcmljZTogbmV3UHJpY2UsXG4gICAgICAgIHByaWNlSGlzdG9yeTogWy4uLihkYXRhW2tleV0/LnByaWNlSGlzdG9yeT8uc2xpY2UoLTkpIHx8IFtdKSwgbmV3UHJpY2VdLFxuICAgICAgfTtcbiAgICB9KTtcblxuICAgIG9uTWVzc2FnZSh1cGRhdGVkRGF0YSk7XG4gIH07XG5cbiAgcHJpY2VzV3Mub25jbG9zZSA9IGZ1bmN0aW9uICgpIHtcbiAgICBjb25zb2xlLmxvZyhcIldlYlNvY2tldCBjb25uZWN0aW9uIGNsb3NlZFwiKTtcbiAgfTtcblxuICByZXR1cm4gKCkgPT4ge1xuICAgIHByaWNlc1dzLmNsb3NlKCk7XG4gIH07XG59O1xuIl0sIm5hbWVzIjpbIkNPSU5fTElTVCIsImZldGNoSW5pdGlhbERhdGEiLCJpbml0aWFsRGF0YSIsImNvaW4iLCJyZXNwb25zZSIsImZldGNoIiwiZGF0YSIsImpzb24iLCJoaXN0b3J5UHJpY2VzIiwibWFwIiwiZW50cnkiLCJwYXJzZUZsb2F0IiwicHJpY2VVc2QiLCJsYXRlc3RQcmljZSIsImxlbmd0aCIsInRvTG93ZXJDYXNlIiwicHJpY2UiLCJ0b0ZpeGVkIiwic3ltYm9sIiwidG9VcHBlckNhc2UiLCJtYXJrZXRWYWx1ZSIsIk51bWJlciIsIm1hcmtldENhcFVzZCIsImNoYW5nZTI0aCIsInByaWNlSGlzdG9yeSIsInNsaWNlIiwiZXJyb3IiLCJjb25zb2xlIiwiY29ubmVjdFRvV2ViU29ja2V0Iiwib25NZXNzYWdlIiwicHJpY2VzV3MiLCJXZWJTb2NrZXQiLCJqb2luIiwib25tZXNzYWdlIiwibXNnIiwiSlNPTiIsInBhcnNlIiwidXBkYXRlZERhdGEiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImtleSIsIm5ld1ByaWNlIiwib25jbG9zZSIsImxvZyIsImNsb3NlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/services/api.ts\n"));

/***/ })

});